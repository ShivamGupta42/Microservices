<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.shivam.microservices.limitsservices.util.LimitsConfiguration"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.limitsservices.util.ConfigurationProps"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="java.math.BigInteger"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.currencyexchangeservice.repository.ExchangeValueRepo"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.currencyexchangeservice.dto.ExchangeValue"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.currencyconversionservice.dto.CurrencyConversionBean"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.currencyconversionservice.externalMicroservices.CurrencyExchangeServiceProxy"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
    <fullyQualifiedTypeName name="com.sun.org.slf4j.internal.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="javax.annotation.PreDestroy"/>
    <fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="brave.sampler.Sampler"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.shivam.microservices.currencyexchangeservice.controller.CurrencyExchangeController"/>
</qualifiedTypeNameHistroy>
